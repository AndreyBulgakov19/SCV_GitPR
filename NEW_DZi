# Команды для создания локального репозитория

```sh
git init
```

## Какой командой можно сделать локальную копию удаленного репозитория?

```sh
git clone

```

## Как называют копию чужого репозитория?

```sh
fork
```  

## Как «стянуть/выкачать» все изменения из удаленного репозитория на свой компьютер?

```sh
git pull
```

# Какой командой отправить изменения в удаленный репозиторий?

```sh
git push
```

## Работа с ветками

Создание ветки

```sh
git branch <имя ветки>
```

Отображение всех веток

```sh
git branch
```

Удаление ветки

```sh
git branch -d <имя ветки>
```

Перемещение по веткам

```sh
git checkout <имя ветки>
```

## Поиск конфликта при слиянии веток

*В случае если в двух ветка после сохранения начать писать (править) в одних и тех же строках, то при попытке слить ветки получтся конфликт.

* Выглядит он так:

![Это изображение показывает реакцию git на конфликт](conflict.png)

```sh
git merge <имя_ветки>                        
```

*Эта команда необходима для слияния веток. Важно! Перед слиянием перейти в головную ветку.*

```sh
git branch -d <имя_ветки>                        

*Команда с таким атрибутом используется для удаления ненужных веток, чтобы не было мусора*

# !Важно Для того чтобы создалась ветка и ее можно было увидеть именно как альтернативы, нужнов основном файле тоже делать изменения, иначе на графике не будет видно ветвления. И все будет в одну ветку в итоге

```sh
Git clone url                        

# Команда позволяет скачать репозиторий по ссылке на локальный компьютер, для дальнейшей работы сним. Важно - Cменить папку когда скачал репозиторий черех команду cd
                        
```sh                        
git remote add origin url на репозиторий (origin название репозитория)
```

* Команда нажна для начала работы с удаленным сервером, напримером GitHub*

```sh
git branch -M main
```

* переименовывает ветку master в main.
  
```sh
git push -u origin main

```

* закачивает репозиторий название и ветка еа удленный сервер

```sh
git pull                         

git pull --rebase 
```

* Скачивает с удаленного сервера последнюю версию репозитория и сливает (Merge) ее с локальной версией. Могут быть конфлиты. Если правили и на удаленном сервере и на локальном компьютере. Решается похоже, как и слокальным конфликтом*

```sh
fork в git hub
```

* Позволяет работать с чужим репозиторием. Надо в GitHub найтти нужный репозиотрий и нажать кнопку fork, после этого репозиторий копируется мой github.
* Далее нужно командой командой clone стащить его к себе на локальный компьютер или работать с ним на GitHub. После этого его можно pull_request обратно хозяину репозитория для возможного принятия предложений

```sh
git remote -v

```

git remote show origin

```

* показывает удаленные репозитории для записи и чтения

```sh

git rm <имя_файла>

```
