# Работа с Git и GitHub
## 1. Проверка наличия установленного Git
В терминале выполнить команду **git version**
Если Git установлен появится версия программы. Иначе будет сообщение об ошибке.

## 2. Установка Git
Загружаем последнюю версию Git с [сайта](http://git-scm.com/downloads). Устанавливаем с настройками по умолчанию.

## 3. Настройка Git
При первом использовании Git  необходимо представиться.
Для этого нужно ввести в терминале 2 команды:
~~~
git config --global user.name "Ваше имя английскими буквами".
git config --global user.email "Ваша электронная почта".
~~~

## 4. Инициализация репозитория

Для создания нового репозитория используется команда `git init`. Команду git init выполняют только один раз для первоначальной настройки нового репозитория. Выполнение команды приведет к созданию нового подкаталога .git в вашем рабочем каталоге. Кроме того, будет создана новая главная ветка.

## 5. Запись изменений в репозиторий

Создайте новый файл Git Instruction.md с текстом `Работа с Git`.
 С помощью команды `git add` добавьте файл Git Instruction.md в репозиторий проиндексированных файлов
Создайте новый коммит с комментарием, описывающим, что именно было изменено в коммите
echo "test content for git tutorial" >> Git Instruction.md 
`git add Git Instruction.md` 
`git commit -m "added Git Instruction.md` to the repo"
По завершении этого примера файл Git Instruction.md добавится к истории репозитория, и репозиторий будет отслеживать последующие изменения в файле.

## 6. Просмотр истории commit-ов

После того, как вы создали несколько коммитов или же клонировали репозиторий с уже существующей историей коммитов, вероятно вам понадобится возможность посмотреть что было сделано — историю коммитов. Одним из основных и наиболее мощных инструментов для этого является команда `git log`.

Если вы запустите команду git log в каталоге клонированного проекта, вы увидите следующий вывод:
```
$ git log
commit ca82a6dff817ec66f44342007202690a93763949
Author: Scott Chacon <schacon@gee-mail.com>
Date:   Mon Mar 17 21:52:11 2008 -0700

    Change version number

commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7
Author: Scott Chacon <schacon@gee-mail.com>
Date:   Sat Mar 15 16:40:33 2008 -0700

    Remove unnecessary test
```

## 7. Перемещение между commit (сохранениями).

Чтобы перейти в уже существующую ветку, используйте ту же команду `git checkout`, но без добавления флага -b. Команде нужно передать имя ветки, в которую вы хотите перейти:
```
(my-feature)$ git checkout master
Switched to branch 'master'
(master)$
```
Для перехода в предыдущую ветку (т. е. ту, из которой вы перешли в текущую) можно передать команде git checkout не имя ветки, а просто дефис:
```
(my-feature)$ git checkout -
Switched to branch 'master'
(master)$ git checkout -
Switched to branch 'my-feature'
(my-feature)$
```
Как переместиться к определенному коммиту
Чтобы перейти к определенному коммиту, используйте ту же команду `git checkout`, но вместо имени ветки передайте ей SHA коммита.

Ветки по сути являются просто указателями трекерами отдельных коммитов в истории Git.
Чтобы переключиться на существующую ветку, выполните `git checkout` команду. Давайте переключимся на новую testing ветку:
```
$ git checkout testing
```